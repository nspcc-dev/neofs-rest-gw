// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// HeadHeadContainerObjectHandlerFunc turns a function with the right signature into a head head container object handler
type HeadHeadContainerObjectHandlerFunc func(HeadHeadContainerObjectParams) middleware.Responder

// Handle executing the request and returning a response
func (fn HeadHeadContainerObjectHandlerFunc) Handle(params HeadHeadContainerObjectParams) middleware.Responder {
	return fn(params)
}

// HeadHeadContainerObjectHandler interface for that can handle valid head head container object params
type HeadHeadContainerObjectHandler interface {
	Handle(HeadHeadContainerObjectParams) middleware.Responder
}

// NewHeadHeadContainerObject creates a new http.Handler for the head head container object operation
func NewHeadHeadContainerObject(ctx *middleware.Context, handler HeadHeadContainerObjectHandler) *HeadHeadContainerObject {
	return &HeadHeadContainerObject{Context: ctx, Handler: handler}
}

/*
	HeadHeadContainerObject swagger:route HEAD /head/{containerId}/{objectId} headHeadContainerObject

Get object info (head) by container id and object id
*/
type HeadHeadContainerObject struct {
	Context *middleware.Context
	Handler HeadHeadContainerObjectHandler
}

func (o *HeadHeadContainerObject) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewHeadHeadContainerObjectParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
