// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/nspcc-dev/neofs-rest-gw/gen/models"
)

// UploadContainerObjectOKCode is the HTTP code returned for type UploadContainerObjectOK
const UploadContainerObjectOKCode int = 200

/*UploadContainerObjectOK Address of uploaded objects.

swagger:response uploadContainerObjectOK
*/
type UploadContainerObjectOK struct {
	/*

	 */
	AccessControlAllowOrigin string `json:"Access-Control-Allow-Origin"`

	/*
	  In: Body
	*/
	Payload *models.AddressForUpload `json:"body,omitempty"`
}

// NewUploadContainerObjectOK creates UploadContainerObjectOK with default headers values
func NewUploadContainerObjectOK() *UploadContainerObjectOK {

	return &UploadContainerObjectOK{}
}

// WithAccessControlAllowOrigin adds the accessControlAllowOrigin to the upload container object o k response
func (o *UploadContainerObjectOK) WithAccessControlAllowOrigin(accessControlAllowOrigin string) *UploadContainerObjectOK {
	o.AccessControlAllowOrigin = accessControlAllowOrigin
	return o
}

// SetAccessControlAllowOrigin sets the accessControlAllowOrigin to the upload container object o k response
func (o *UploadContainerObjectOK) SetAccessControlAllowOrigin(accessControlAllowOrigin string) {
	o.AccessControlAllowOrigin = accessControlAllowOrigin
}

// WithPayload adds the payload to the upload container object o k response
func (o *UploadContainerObjectOK) WithPayload(payload *models.AddressForUpload) *UploadContainerObjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload container object o k response
func (o *UploadContainerObjectOK) SetPayload(payload *models.AddressForUpload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadContainerObjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Access-Control-Allow-Origin

	accessControlAllowOrigin := o.AccessControlAllowOrigin
	if accessControlAllowOrigin != "" {
		rw.Header().Set("Access-Control-Allow-Origin", accessControlAllowOrigin)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadContainerObjectBadRequestCode is the HTTP code returned for type UploadContainerObjectBadRequest
const UploadContainerObjectBadRequestCode int = 400

/*UploadContainerObjectBadRequest Bad request.

swagger:response uploadContainerObjectBadRequest
*/
type UploadContainerObjectBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUploadContainerObjectBadRequest creates UploadContainerObjectBadRequest with default headers values
func NewUploadContainerObjectBadRequest() *UploadContainerObjectBadRequest {

	return &UploadContainerObjectBadRequest{}
}

// WithPayload adds the payload to the upload container object bad request response
func (o *UploadContainerObjectBadRequest) WithPayload(payload *models.ErrorResponse) *UploadContainerObjectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload container object bad request response
func (o *UploadContainerObjectBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadContainerObjectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
