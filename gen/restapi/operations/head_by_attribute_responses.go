// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	"github.com/nspcc-dev/neofs-rest-gw/gen/models"
)

// HeadByAttributeOKCode is the HTTP code returned for type HeadByAttributeOK
const HeadByAttributeOKCode int = 200

/*HeadByAttributeOK Object info.

swagger:response headByAttributeOK
*/
type HeadByAttributeOK struct {
	/*

	 */
	AccessControlAllowOrigin string `json:"Access-Control-Allow-Origin"`
	/*

	 */
	ContentDisposition string `json:"Content-Disposition"`
	/*

	 */
	ContentLength string `json:"Content-Length"`
	/*

	 */
	ContentType string `json:"Content-Type"`
	/*

	 */
	LastModified string `json:"Last-Modified"`
	/*

	 */
	XAttributeFileName string `json:"X-Attribute-FileName"`
	/*

	 */
	XAttributeTimestamp int64 `json:"X-Attribute-Timestamp"`
	/*

	 */
	XContainerID string `json:"X-Container-Id"`
	/*

	 */
	XObjectID string `json:"X-Object-Id"`
	/*

	 */
	XOwnerID string `json:"X-Owner-Id"`

	/*
	  In: Body
	*/
	Payload *models.ObjectInfo `json:"body,omitempty"`
}

// NewHeadByAttributeOK creates HeadByAttributeOK with default headers values
func NewHeadByAttributeOK() *HeadByAttributeOK {

	return &HeadByAttributeOK{}
}

// WithAccessControlAllowOrigin adds the accessControlAllowOrigin to the head by attribute o k response
func (o *HeadByAttributeOK) WithAccessControlAllowOrigin(accessControlAllowOrigin string) *HeadByAttributeOK {
	o.AccessControlAllowOrigin = accessControlAllowOrigin
	return o
}

// SetAccessControlAllowOrigin sets the accessControlAllowOrigin to the head by attribute o k response
func (o *HeadByAttributeOK) SetAccessControlAllowOrigin(accessControlAllowOrigin string) {
	o.AccessControlAllowOrigin = accessControlAllowOrigin
}

// WithContentDisposition adds the contentDisposition to the head by attribute o k response
func (o *HeadByAttributeOK) WithContentDisposition(contentDisposition string) *HeadByAttributeOK {
	o.ContentDisposition = contentDisposition
	return o
}

// SetContentDisposition sets the contentDisposition to the head by attribute o k response
func (o *HeadByAttributeOK) SetContentDisposition(contentDisposition string) {
	o.ContentDisposition = contentDisposition
}

// WithContentLength adds the contentLength to the head by attribute o k response
func (o *HeadByAttributeOK) WithContentLength(contentLength string) *HeadByAttributeOK {
	o.ContentLength = contentLength
	return o
}

// SetContentLength sets the contentLength to the head by attribute o k response
func (o *HeadByAttributeOK) SetContentLength(contentLength string) {
	o.ContentLength = contentLength
}

// WithContentType adds the contentType to the head by attribute o k response
func (o *HeadByAttributeOK) WithContentType(contentType string) *HeadByAttributeOK {
	o.ContentType = contentType
	return o
}

// SetContentType sets the contentType to the head by attribute o k response
func (o *HeadByAttributeOK) SetContentType(contentType string) {
	o.ContentType = contentType
}

// WithLastModified adds the lastModified to the head by attribute o k response
func (o *HeadByAttributeOK) WithLastModified(lastModified string) *HeadByAttributeOK {
	o.LastModified = lastModified
	return o
}

// SetLastModified sets the lastModified to the head by attribute o k response
func (o *HeadByAttributeOK) SetLastModified(lastModified string) {
	o.LastModified = lastModified
}

// WithXAttributeFileName adds the xAttributeFileName to the head by attribute o k response
func (o *HeadByAttributeOK) WithXAttributeFileName(xAttributeFileName string) *HeadByAttributeOK {
	o.XAttributeFileName = xAttributeFileName
	return o
}

// SetXAttributeFileName sets the xAttributeFileName to the head by attribute o k response
func (o *HeadByAttributeOK) SetXAttributeFileName(xAttributeFileName string) {
	o.XAttributeFileName = xAttributeFileName
}

// WithXAttributeTimestamp adds the xAttributeTimestamp to the head by attribute o k response
func (o *HeadByAttributeOK) WithXAttributeTimestamp(xAttributeTimestamp int64) *HeadByAttributeOK {
	o.XAttributeTimestamp = xAttributeTimestamp
	return o
}

// SetXAttributeTimestamp sets the xAttributeTimestamp to the head by attribute o k response
func (o *HeadByAttributeOK) SetXAttributeTimestamp(xAttributeTimestamp int64) {
	o.XAttributeTimestamp = xAttributeTimestamp
}

// WithXContainerID adds the xContainerId to the head by attribute o k response
func (o *HeadByAttributeOK) WithXContainerID(xContainerID string) *HeadByAttributeOK {
	o.XContainerID = xContainerID
	return o
}

// SetXContainerID sets the xContainerId to the head by attribute o k response
func (o *HeadByAttributeOK) SetXContainerID(xContainerID string) {
	o.XContainerID = xContainerID
}

// WithXObjectID adds the xObjectId to the head by attribute o k response
func (o *HeadByAttributeOK) WithXObjectID(xObjectID string) *HeadByAttributeOK {
	o.XObjectID = xObjectID
	return o
}

// SetXObjectID sets the xObjectId to the head by attribute o k response
func (o *HeadByAttributeOK) SetXObjectID(xObjectID string) {
	o.XObjectID = xObjectID
}

// WithXOwnerID adds the xOwnerId to the head by attribute o k response
func (o *HeadByAttributeOK) WithXOwnerID(xOwnerID string) *HeadByAttributeOK {
	o.XOwnerID = xOwnerID
	return o
}

// SetXOwnerID sets the xOwnerId to the head by attribute o k response
func (o *HeadByAttributeOK) SetXOwnerID(xOwnerID string) {
	o.XOwnerID = xOwnerID
}

// WithPayload adds the payload to the head by attribute o k response
func (o *HeadByAttributeOK) WithPayload(payload *models.ObjectInfo) *HeadByAttributeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the head by attribute o k response
func (o *HeadByAttributeOK) SetPayload(payload *models.ObjectInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HeadByAttributeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Access-Control-Allow-Origin

	accessControlAllowOrigin := o.AccessControlAllowOrigin
	if accessControlAllowOrigin != "" {
		rw.Header().Set("Access-Control-Allow-Origin", accessControlAllowOrigin)
	}

	// response header Content-Disposition

	contentDisposition := o.ContentDisposition
	if contentDisposition != "" {
		rw.Header().Set("Content-Disposition", contentDisposition)
	}

	// response header Content-Length

	contentLength := o.ContentLength
	if contentLength != "" {
		rw.Header().Set("Content-Length", contentLength)
	}

	// response header Content-Type

	contentType := o.ContentType
	if contentType != "" {
		rw.Header().Set("Content-Type", contentType)
	}

	// response header Last-Modified

	lastModified := o.LastModified
	if lastModified != "" {
		rw.Header().Set("Last-Modified", lastModified)
	}

	// response header X-Attribute-FileName

	xAttributeFileName := o.XAttributeFileName
	if xAttributeFileName != "" {
		rw.Header().Set("X-Attribute-FileName", xAttributeFileName)
	}

	// response header X-Attribute-Timestamp

	xAttributeTimestamp := swag.FormatInt64(o.XAttributeTimestamp)
	if xAttributeTimestamp != "" {
		rw.Header().Set("X-Attribute-Timestamp", xAttributeTimestamp)
	}

	// response header X-Container-Id

	xContainerID := o.XContainerID
	if xContainerID != "" {
		rw.Header().Set("X-Container-Id", xContainerID)
	}

	// response header X-Object-Id

	xObjectID := o.XObjectID
	if xObjectID != "" {
		rw.Header().Set("X-Object-Id", xObjectID)
	}

	// response header X-Owner-Id

	xOwnerID := o.XOwnerID
	if xOwnerID != "" {
		rw.Header().Set("X-Owner-Id", xOwnerID)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HeadByAttributeBadRequestCode is the HTTP code returned for type HeadByAttributeBadRequest
const HeadByAttributeBadRequestCode int = 400

/*HeadByAttributeBadRequest Bad request.

swagger:response headByAttributeBadRequest
*/
type HeadByAttributeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewHeadByAttributeBadRequest creates HeadByAttributeBadRequest with default headers values
func NewHeadByAttributeBadRequest() *HeadByAttributeBadRequest {

	return &HeadByAttributeBadRequest{}
}

// WithPayload adds the payload to the head by attribute bad request response
func (o *HeadByAttributeBadRequest) WithPayload(payload *models.ErrorResponse) *HeadByAttributeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the head by attribute bad request response
func (o *HeadByAttributeBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HeadByAttributeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HeadByAttributeNotFoundCode is the HTTP code returned for type HeadByAttributeNotFound
const HeadByAttributeNotFoundCode int = 404

/*HeadByAttributeNotFound Not found

swagger:response headByAttributeNotFound
*/
type HeadByAttributeNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewHeadByAttributeNotFound creates HeadByAttributeNotFound with default headers values
func NewHeadByAttributeNotFound() *HeadByAttributeNotFound {

	return &HeadByAttributeNotFound{}
}

// WithPayload adds the payload to the head by attribute not found response
func (o *HeadByAttributeNotFound) WithPayload(payload *models.ErrorResponse) *HeadByAttributeNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the head by attribute not found response
func (o *HeadByAttributeNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HeadByAttributeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
