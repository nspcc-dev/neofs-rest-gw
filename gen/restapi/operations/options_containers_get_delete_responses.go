// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// OptionsContainersGetDeleteOKCode is the HTTP code returned for type OptionsContainersGetDeleteOK
const OptionsContainersGetDeleteOKCode int = 200

/*OptionsContainersGetDeleteOK CORS

swagger:response optionsContainersGetDeleteOK
*/
type OptionsContainersGetDeleteOK struct {
	/*

	 */
	AccessControlAllowHeaders string `json:"Access-Control-Allow-Headers"`
	/*

	 */
	AccessControlAllowMethods string `json:"Access-Control-Allow-Methods"`
	/*

	 */
	AccessControlAllowOrigin string `json:"Access-Control-Allow-Origin"`
}

// NewOptionsContainersGetDeleteOK creates OptionsContainersGetDeleteOK with default headers values
func NewOptionsContainersGetDeleteOK() *OptionsContainersGetDeleteOK {

	return &OptionsContainersGetDeleteOK{}
}

// WithAccessControlAllowHeaders adds the accessControlAllowHeaders to the options containers get delete o k response
func (o *OptionsContainersGetDeleteOK) WithAccessControlAllowHeaders(accessControlAllowHeaders string) *OptionsContainersGetDeleteOK {
	o.AccessControlAllowHeaders = accessControlAllowHeaders
	return o
}

// SetAccessControlAllowHeaders sets the accessControlAllowHeaders to the options containers get delete o k response
func (o *OptionsContainersGetDeleteOK) SetAccessControlAllowHeaders(accessControlAllowHeaders string) {
	o.AccessControlAllowHeaders = accessControlAllowHeaders
}

// WithAccessControlAllowMethods adds the accessControlAllowMethods to the options containers get delete o k response
func (o *OptionsContainersGetDeleteOK) WithAccessControlAllowMethods(accessControlAllowMethods string) *OptionsContainersGetDeleteOK {
	o.AccessControlAllowMethods = accessControlAllowMethods
	return o
}

// SetAccessControlAllowMethods sets the accessControlAllowMethods to the options containers get delete o k response
func (o *OptionsContainersGetDeleteOK) SetAccessControlAllowMethods(accessControlAllowMethods string) {
	o.AccessControlAllowMethods = accessControlAllowMethods
}

// WithAccessControlAllowOrigin adds the accessControlAllowOrigin to the options containers get delete o k response
func (o *OptionsContainersGetDeleteOK) WithAccessControlAllowOrigin(accessControlAllowOrigin string) *OptionsContainersGetDeleteOK {
	o.AccessControlAllowOrigin = accessControlAllowOrigin
	return o
}

// SetAccessControlAllowOrigin sets the accessControlAllowOrigin to the options containers get delete o k response
func (o *OptionsContainersGetDeleteOK) SetAccessControlAllowOrigin(accessControlAllowOrigin string) {
	o.AccessControlAllowOrigin = accessControlAllowOrigin
}

// WriteResponse to the client
func (o *OptionsContainersGetDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Access-Control-Allow-Headers

	accessControlAllowHeaders := o.AccessControlAllowHeaders
	if accessControlAllowHeaders != "" {
		rw.Header().Set("Access-Control-Allow-Headers", accessControlAllowHeaders)
	}

	// response header Access-Control-Allow-Methods

	accessControlAllowMethods := o.AccessControlAllowMethods
	if accessControlAllowMethods != "" {
		rw.Header().Set("Access-Control-Allow-Methods", accessControlAllowMethods)
	}

	// response header Access-Control-Allow-Origin

	accessControlAllowOrigin := o.AccessControlAllowOrigin
	if accessControlAllowOrigin != "" {
		rw.Header().Set("Access-Control-Allow-Origin", accessControlAllowOrigin)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}
